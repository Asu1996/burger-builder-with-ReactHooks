{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default (httpClient => {\n  const [error, setError] = useState(null);\n  const reqInterceptor = httpClient.interceptors.request.use(req => {\n    setError(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\n    setError(err);\n  });\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [httpClient.interceptors.request, httpClient.interceptors.response, reqInterceptor, resInterceptor]);\n\n  const errorConfirmHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmHandler];\n});","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/hooks/http-error-handler.js"],"names":["useEffect","useState","httpClient","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","errorConfirmHandler"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,gBAAeC,UAAU,IAAI;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AAEQ,QAAMI,cAAc,GAAGH,UAAU,CAACI,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAqCC,GAAG,IAAG;AAC9DL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,WAAOK,GAAP;AACH,GAHsB,CAAvB;AAKA,QAAMC,cAAc,GAAGR,UAAU,CAACI,YAAX,CAAwBK,QAAxB,CAAiCH,GAAjC,CAAqCI,GAAG,IAAIA,GAA5C,EAAiDC,GAAG,IAAI;AAC3ET,IAAAA,QAAQ,CAACS,GAAD,CAAR;AACH,GAFsB,CAAvB;AAKJb,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACTE,MAAAA,UAAU,CAACI,YAAX,CAAwBC,OAAxB,CAAgCO,KAAhC,CAAsCT,cAAtC;AACAH,MAAAA,UAAU,CAACI,YAAX,CAAwBK,QAAxB,CAAiCG,KAAjC,CAAuCJ,cAAvC;AACH,KAHD;AAIH,GALQ,EAKN,CAACR,UAAU,CAACI,YAAX,CAAwBC,OAAzB,EAAiCL,UAAU,CAACI,YAAX,CAAwBK,QAAzD,EAAkEN,cAAlE,EAAiFK,cAAjF,CALM,CAAT;;AAOA,QAAMK,mBAAmB,GAAG,MAAM;AAC9BX,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,SAAO,CAACD,KAAD,EAAQY,mBAAR,CAAP;AACP,CAzBD","sourcesContent":["import {useEffect, useState} from 'react'\n\nexport default httpClient => {\n    const [error, setError] = useState(null);\n\n            const reqInterceptor = httpClient.interceptors.request.use( req=> {\n                setError(null);\n                return req;\n            });\n\n            const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\n                setError(err);\n            });\n\n\n        useEffect(() => {\n            return () => {\n                httpClient.interceptors.request.eject(reqInterceptor);\n                httpClient.interceptors.response.eject(resInterceptor);\n            }\n        }, [httpClient.interceptors.request,httpClient.interceptors.response,reqInterceptor,resInterceptor] );\n\n        const errorConfirmHandler = () => {\n            setError(null);\n        }\n\n        return [error, errorConfirmHandler];\n}"]},"metadata":{},"sourceType":"module"}