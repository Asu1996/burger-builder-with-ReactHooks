{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/withErrorHandler/withErrorHandler.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../components/UI/Modal/Modal';\nimport Aux from '../hoc/Aux';\n\nconst withErrorHandler = (WrappedContent, axios) => {\n  return props => {\n    const [error, setError] = useState(null);\n    const reqInterceptor = axios.interceptors.request.use(req => {\n      setError(null);\n      return req;\n    });\n    const resInterceptor = axios.interceptors.response.use(res => res, err => {\n      setError(err);\n    });\n    useEffect(() => {\n      return () => {\n        axios.interceptors.request.eject(reqInterceptor);\n        axios.interceptors.response.eject(resInterceptor);\n      };\n    }, [reqInterceptor, resInterceptor]);\n\n    const errorConfirmHandler = () => {\n      setError(null);\n    };\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.error,\n      modalClosed: this.errorConfirmHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, this.state.error ? this.state.error.message : null), /*#__PURE__*/React.createElement(WrappedContent, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    })));\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/withErrorHandler/withErrorHandler.js"],"names":["React","useState","useEffect","Modal","Aux","withErrorHandler","WrappedContent","axios","props","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","errorConfirmHandler","state","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAGA,MAAMC,gBAAgB,GAAG,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAChD,SAAOC,KAAK,IAAI;AAEZ,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEI,UAAMU,cAAc,GAAGJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAG,IAAG;AACzDL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,aAAOK,GAAP;AACH,KAHsB,CAAvB;AAKA,UAAMC,cAAc,GAAGT,KAAK,CAACK,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAgCI,GAAG,IAAIA,GAAvC,EAA4CC,GAAG,IAAI;AACtET,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACH,KAFsB,CAAvB;AAKJjB,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAO,MAAM;AACTK,QAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAiCT,cAAjC;AACAJ,QAAAA,KAAK,CAACK,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAkCJ,cAAlC;AACH,OAHD;AAIH,KALQ,EAKN,CAACL,cAAD,EAAgBK,cAAhB,CALM,CAAT;;AAOA,UAAMK,mBAAmB,GAAG,MAAM;AAC9BX,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD;;AAKI,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKY,KAAL,CAAWb,KADrB;AAEI,MAAA,WAAW,EAAE,KAAKY,mBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKC,KAAL,CAAWb,KAAX,GAAmB,KAAKa,KAAL,CAAWb,KAAX,CAAiBc,OAApC,GAA8C,IAHnD,CADJ,eAMI,oBAAC,cAAD,oBAAoB,KAAKf,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ,CADJ;AAWP,GArCD;AAsCH,CAvCD;;AAyCA,eAAeH,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport Modal from '../components/UI/Modal/Modal'\nimport Aux from '../hoc/Aux'\n\n\nconst withErrorHandler = (WrappedContent, axios) => {\n    return props => {\n\n        const [error, setError] = useState(null);\n\n            const reqInterceptor = axios.interceptors.request.use( req=> {\n                setError(null);\n                return req;\n            });\n\n            const resInterceptor = axios.interceptors.response.use(res => res, err => {\n                setError(err);\n            });\n\n\n        useEffect(() => {\n            return () => {\n                axios.interceptors.request.eject(reqInterceptor);\n                axios.interceptors.response.eject(resInterceptor);\n            }\n        }, [reqInterceptor,resInterceptor] );\n\n        const errorConfirmHandler = () => {\n            setError(null);\n        }\n\n        \n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedContent {...this.props} />\n                </Aux>\n            );\n        \n    }\n};\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}