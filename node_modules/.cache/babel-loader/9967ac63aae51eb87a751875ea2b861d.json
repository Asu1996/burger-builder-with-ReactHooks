{"ast":null,"code":"import _objectSpread from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import axios from'../../axios-orders';import order from'../../components/Order/Order';export var purchaseBurgerSuccess=function purchaseBurgerSuccess(id,orderData){return{type:actionTypes.PURCHASE_BURGER_SUCCESS,orderId:id,orderData:orderData};};export var purchaseBurgerFail=function purchaseBurgerFail(error){return{type:actionTypes.PURCHASE_BURGER_FAIL,error:error};};export var purchaseBurgerStart=function purchaseBurgerStart(){return{type:actionTypes.PURCHASE_BURGER_START};};export var purchaseBurger=function purchaseBurger(orderData,token){return function(dispatch){dispatch(purchaseBurgerStart());axios.post('/orders.json?auth='+token,orderData).then(function(response){dispatch(purchaseBurgerSuccess(response.data.name,orderData));}).catch(function(error){dispatch(purchaseBurgerFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());var queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';axios.get('/orders.json'+queryParams).then(function(res){var fetchedOrders=[];for(var key in res.data){fetchedOrders.push(_objectSpread(_objectSpread({},res.data[key]),{},{id:key}));}dispatch(fetchOrdersSuccess(fetchedOrders));}).catch(function(err){dispatch(fetchOrdersFail(err));});};};","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder/src/store/actions/order.js"],"names":["actionTypes","axios","order","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersStart","FETCH_ORDERS_START","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\nimport order from '../../components/Order/Order';\n\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart =() => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n         \n        axios.post( '/orders.json?auth='+token, orderData )\n            .then( response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n                } \n            )\n            .catch( error => {\n                dispatch(purchaseBurgerFail(error));\n                } \n            )\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return{\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return{\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return{\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n        .then(res => {\n            const fetchedOrders = [];\n            for(let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id : key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders));\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err));\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}