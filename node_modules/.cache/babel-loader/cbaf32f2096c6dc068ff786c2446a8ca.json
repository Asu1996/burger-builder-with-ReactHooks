{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/components/Layout/Layout.js\";\nimport React, { useState } from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nconst Layout = props => {\n  const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    setSideDrawerIsVisible(false);\n  };\n\n  const sideDrawerToggleHandler = () => {\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  };\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    isAuth: props.isAuthenticated,\n    drawerToggleClicked: sideDrawerToggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SideDrawer, {\n    isAuth: props.isAuthenticated,\n    open: sideDrawerIsVisible,\n    closed: sideDrawerClosedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, props.children));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/components/Layout/Layout.js"],"names":["React","useState","Aux","classes","Toolbar","SideDrawer","connect","Layout","props","sideDrawerIsVisible","setSideDrawerIsVisible","sideDrawerClosedHandler","sideDrawerToggleHandler","isAuthenticated","Content","children","mapStateToProps","state","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAMU,uBAAuB,GAAG,MAAM;AAClCD,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH,GAFD;;AAIA,QAAME,uBAAuB,GAAG,MAAM;AAClCF,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GAFD;;AAII,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,MAAM,EAAED,KAAK,CAACK,eADlB;AAEI,IAAA,mBAAmB,EAAED,uBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEJ,KAAK,CAACK,eADlB;AAEI,IAAA,IAAI,EAAEJ,mBAFV;AAGI,IAAA,MAAM,EAAEE,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAQI;AAAM,IAAA,SAAS,EAAER,OAAO,CAACW,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,QADX,CARJ,CADJ;AAeP,CA3BD;;AA6BA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,eAAe,EAAEI,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACU,eAAD,CAAP,CAAyBT,MAAzB,CAAf","sourcesContent":["import React,{useState} from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport {connect} from 'react-redux'\n\n\nconst Layout = props => {\n\n    const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n    \n    const sideDrawerClosedHandler = () => {\n        setSideDrawerIsVisible(false);\n    }\n\n    const sideDrawerToggleHandler = () => { \n        setSideDrawerIsVisible(!sideDrawerIsVisible);\n    }\n\n        return (\n            <Aux>\n                <Toolbar \n                    isAuth={props.isAuthenticated}\n                    drawerToggleClicked={sideDrawerToggleHandler}/>\n                <SideDrawer \n                    isAuth={props.isAuthenticated}\n                    open={sideDrawerIsVisible} \n                    closed={sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {props.children}\n                </main>\n            </Aux>\n        );\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}