{"ast":null,"code":"import _defineProperty from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'../../../axios-orders';import{connect}from'react-redux';import Button from'../../../components/UI/Button/Button';import Spinner from'../../../components/UI/Spinner/Spinner';import Input from'../../../components/UI/Input/Input';import withErrorHandler from'../../../withErrorHandler/withErrorHandler';import{updateObject,checkValidity}from'../../../shared/utility';import*as actions from'../../../store/actions/index';import classes from'./ContactData.module.css';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);var _super=_createSuper(ContactData);function ContactData(){var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'YourName?'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'YourStreet?'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'YourZipCode?'},value:'',validation:{required:true,minLength:5,maxLength:5},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'YourCountry?'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'YourEmail?'},value:'',validation:{required:true},valid:false,touched:false},deliveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',displayValue:'Fastest'},{value:'cheapest',displayValue:'Cheapest'}]},value:'fastest',valid:true,validation:{}}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ings,price:_this.props.price,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.orderForm.validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var form=/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.orderHandler},formElementsArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}});}),/*#__PURE__*/React.createElement(Button,{btnType:\"Success\",disabled:!this.state.formIsValid},\"ORDER\"));if(this.props.loading){form=/*#__PURE__*/React.createElement(Spinner,null);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.ContactData},/*#__PURE__*/React.createElement(\"h4\",null,\"Enter your Contact Data\"),form);}}]);return ContactData;}(Component);var mapStateToProps=function mapStateToProps(state){return{ings:state.burgerBuilder.ingredients,price:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(actions.purchaseBurger(orderData,token));}};};export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","axios","connect","Button","Spinner","Input","withErrorHandler","updateObject","checkValidity","actions","classes","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","setState","formElementsArray","key","push","id","config","form","map","formElement","loading","mapStateToProps","burgerBuilder","totalPrice","auth","mapDispatchToProps","dispatch","purchaseBurger"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport axios from '../../../axios-orders'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../components/UI/Button/Button'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../withErrorHandler/withErrorHandler'\nimport {updateObject,checkValidity} from '../../../shared/utility'\n\nimport * as actions from '../../../store/actions/index'\n\nimport classes from './ContactData.module.css'\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourName?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourStreet?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourZipCode?'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourCountry?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'YourEmail?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod : {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                valid:true,\n                validation: {},\n\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        } ;\n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value:event.target.value,\n            valid:checkValidity(event.target.value, this.state.orderForm.validation),\n            touched:true\n\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        })\n            \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));"]},"metadata":{},"sourceType":"module"}