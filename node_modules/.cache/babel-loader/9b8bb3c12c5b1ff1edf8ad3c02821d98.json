{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n      ;\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = updateObject(...action.orderData, {\n        id: action.orderId\n      });\n      return updateObject(state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_START","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEL,YAAR,EAAsBM,MAAtB,KAAiC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,aAAjB;AACI,aAAOT,YAAY,CAACM,KAAD,EAAQ;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAR,CAAnB;;AACJ,SAAKL,WAAW,CAACW,qBAAjB;AACI,aAAOV,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;AAA4C;;AAChD,SAAKJ,WAAW,CAACY,uBAAjB;AACI,YAAMC,QAAQ,GAAEZ,YAAY,CAAC,GAAGO,MAAM,CAACM,SAAX,EAAsB;AAACC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAAZ,OAAtB,CAA5B;AACA,aAAOf,YAAY,CAACM,KAAD,EAAQ;AACvBH,QAAAA,OAAO,EAAE,KADc;AAEvBC,QAAAA,SAAS,EAAE,IAFY;AAGvBF,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAHe,OAAR,CAAnB;;AAMJ,SAAKb,WAAW,CAACkB,oBAAjB;AACI,aAAOjB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AAEJ,SAAKJ,WAAW,CAACmB,oBAAjB;AACI,aAAOlB,YAAY,CAACM,KAAD,EAAQ;AAAEJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAAjB;AACvBC,QAAAA,OAAO,EAAE;AADc,OAAR,CAAnB;;AAGJ,SAAKJ,WAAW,CAACoB,kBAAjB;AACQ,aAAOnB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AAER,SAAKJ,WAAW,CAACqB,iBAAjB;AACI,aAAOpB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AACJ;AAAS,aAAOG,KAAP;AAzBb;AA2BH,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state= initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, {purchased: false});\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, {loading: true});;\n        case actionTypes.PURCHASE_BURGER_SUCCESS: \n            const newOrder =updateObject(...action.orderData, {id: action.orderId});\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            });\n            \n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, {loading: false});\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, { orders: action.orders,\n                loading: false });   \n\n        case actionTypes.FETCH_ORDERS_START:\n                return updateObject(state, {loading: true});\n\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, {loading: false});\n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}