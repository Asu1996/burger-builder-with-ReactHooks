{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath('/checkout');\n        this.props.history.push('/auth');\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    ;\n    let orderSummary = null;\n    let burger = this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, \"Ingredients can't be loaded!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 79\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        isAuth: this.props.isAuthenticated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContnued: this.purchaseContinueHandler,\n        price: this.props.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","actions","BurgerBuilder","state","purchasing","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler'\n\nimport * as actions from '../../store/actions/index'\n\n\n\nclass BurgerBuilder extends Component{\n    \n    state = {\n        purchasing:false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => {\n                        return ingredients[igKey]\n                    })\n                    .reduce((sum, el) => {\n                        return sum + el;\n                    }, 0);\n        return sum>0;\n    }\n    \n    purchaseHandler = () =>  {\n        if(this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        }\n        else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth')\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing:false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        };\n\n        let orderSummary = null;\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if(this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings}/>\n                        <BuildControls \n                            ingredientAdded={this.props.onIngredientAdded}\n                            ingredientRemoved={this.props.onIngredientRemoved}\n                            disabled={disabledInfo}\n                            purchasable={this.updatePurchaseState(this.props.ings)}\n                            ordered={this.purchaseHandler}\n                            price={this.props.price}\n                            isAuth={this.props.isAuthenticated}\n                        />\n                </Aux>        \n            );\n\n            orderSummary = (<OrderSummary \n                    ingredients={this.props.ings} \n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContnued={this.purchaseContinueHandler}\n                    price={this.props.price}/>\n                );\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}