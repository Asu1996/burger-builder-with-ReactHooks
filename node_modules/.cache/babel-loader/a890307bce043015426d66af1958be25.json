{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/containers/Orders/Orders.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\nconst Orders = props => {\n  useEffect(() => {\n    props.onFetchOrders(props.token, props.userId);\n  }, [props]); // const { token, userId, onFetchOrder } = props;\n  // useEffect(() => {\n  //   onFetchOrder(token, userId);\n  // }, [onFetchOrder, token, userId]);\n\n  let orders = /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }\n  });\n\n  if (!props.loading) {\n    orders = props.orders.map(order => /*#__PURE__*/React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, orders);\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/containers/Orders/Orders.js"],"names":["React","useEffect","connect","axios","Order","withErrorHandler","Spinner","actions","Orders","props","onFetchOrders","token","userId","orders","loading","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpBR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,KAA1B,EAAgCF,KAAK,CAACG,MAAtC;AACH,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT,CAFoB,CAMpB;AACA;AACA;AACA;;AAEI,MAAII,MAAM,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AACA,MAAG,CAACJ,KAAK,CAACK,OAAV,EAAmB;AACfD,IAAAA,MAAM,GAAGJ,KAAK,CAACI,MAAN,CAAaE,GAAb,CAAiBC,KAAK,iBAC3B,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,MAAA,WAAW,EAAID,KAAK,CAACE,WAFzB;AAGI,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAT;AAOC;;AAEL,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,MADL,CADJ;AAMP,CA5BD;;AA8BA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADjB;AAEHC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF,OAFlB;AAGHH,IAAAA,KAAK,EAAEU,KAAK,CAACC,IAAN,CAAWX,KAHf;AAIHC,IAAAA,MAAM,EAAES,KAAK,CAACC,IAAN,CAAWV;AAJhB,GAAP;AAMH,CAPD;;AASA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkBY,QAAQ,CAACjB,OAAO,CAACkB,WAAR,CAAoBd,KAApB,EAA2BC,MAA3B,CAAD;AADtC,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,gBAAgB,CAACG,MAAD,EAAQL,KAAR,CAA7D,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport axios from '../../axios-orders'\n\nimport Order from '../../components/Order/Order'\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nimport * as actions from '../../store/actions/index'\n\nconst Orders = props => {\n\n    useEffect(() => {\n        props.onFetchOrders(props.token,props.userId);\n    }, [props] )\n\n    // const { token, userId, onFetchOrder } = props;\n    // useEffect(() => {\n    //   onFetchOrder(token, userId);\n    // }, [onFetchOrder, token, userId]);\n\n        let orders = <Spinner />;\n        if(!props.loading) {\n            orders = props.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients = {order.ingredients}\n                    price={order.price}\n                />\n            ))\n            }\n    \n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));"]},"metadata":{},"sourceType":"module"}