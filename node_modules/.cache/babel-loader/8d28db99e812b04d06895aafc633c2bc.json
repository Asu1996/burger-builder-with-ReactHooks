{"ast":null,"code":"import _toConsumableArray from\"/home/asutosh/Documents/myReact/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as actionTypes from'../actions/actionTypes';import{updateObject}from'../../shared/utility';var initialState={orders:[],loading:false,purchased:false};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.PURCHASE_INIT:return updateObject(state,{purchased:false});case actionTypes.PURCHASE_BURGER_START:return updateObject(state,{loading:true});;case actionTypes.PURCHASE_BURGER_SUCCESS:var newOrder=updateObject.apply(void 0,_toConsumableArray(action.orderData).concat([{id:action.orderId}]));return updateObject(state,{loading:false,purchased:true,orders:state.orders.concat(newOrder)});case actionTypes.PURCHASE_BURGER_FAIL:return updateObject(state,{loading:false});case actionTypes.FETCH_ORDERS_SUCCESS:return updateObject(state,{orders:action.orders,loading:false});case actionTypes.FETCH_ORDERS_START:return updateObject(state,{loading:true});case actionTypes.FETCH_ORDERS_FAIL:return updateObject(state,{loading:false});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_START","FETCH_ORDERS_FAIL"],"mappings":"6KAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,OAAQC,YAAR,KAA2B,sBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,MAAM,CAAE,EADS,CAEjBC,OAAO,CAAE,KAFQ,CAGjBC,SAAS,CAAE,KAHM,CAArB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAiC,IAAhCC,CAAAA,KAAgC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC7C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,WAAW,CAACU,aAAjB,CACI,MAAOT,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACF,SAAS,CAAE,KAAZ,CAAR,CAAnB,CACJ,IAAKL,CAAAA,WAAW,CAACW,qBAAjB,CACI,MAAOV,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACH,OAAO,CAAE,IAAV,CAAR,CAAnB,CAA4C,CAChD,IAAKJ,CAAAA,WAAW,CAACY,uBAAjB,CACI,GAAMC,CAAAA,QAAQ,CAAEZ,YAAY,MAAZ,2BAAgBO,MAAM,CAACM,SAAvB,UAAkC,CAACC,EAAE,CAAEP,MAAM,CAACQ,OAAZ,CAAlC,GAAhB,CACA,MAAOf,CAAAA,YAAY,CAACM,KAAD,CAAQ,CACvBH,OAAO,CAAE,KADc,CAEvBC,SAAS,CAAE,IAFY,CAGvBF,MAAM,CAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB,CAHe,CAAR,CAAnB,CAMJ,IAAKb,CAAAA,WAAW,CAACkB,oBAAjB,CACI,MAAOjB,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACH,OAAO,CAAE,KAAV,CAAR,CAAnB,CAEJ,IAAKJ,CAAAA,WAAW,CAACmB,oBAAjB,CACI,MAAOlB,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAAEJ,MAAM,CAAEK,MAAM,CAACL,MAAjB,CACvBC,OAAO,CAAE,KADc,CAAR,CAAnB,CAGJ,IAAKJ,CAAAA,WAAW,CAACoB,kBAAjB,CACQ,MAAOnB,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACH,OAAO,CAAE,IAAV,CAAR,CAAnB,CAER,IAAKJ,CAAAA,WAAW,CAACqB,iBAAjB,CACI,MAAOpB,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACH,OAAO,CAAE,KAAV,CAAR,CAAnB,CACJ,QAAS,MAAOG,CAAAA,KAAP,CAzBb,CA2BH,CA5BD,CA8BA,cAAeD,CAAAA,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state= initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, {purchased: false});\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, {loading: true});;\n        case actionTypes.PURCHASE_BURGER_SUCCESS: \n            const newOrder =updateObject(...action.orderData, {id: action.orderId});\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            });\n            \n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, {loading: false});\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, { orders: action.orders,\n                loading: false });   \n\n        case actionTypes.FETCH_ORDERS_START:\n                return updateObject(state, {loading: true});\n\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, {loading: false});\n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}