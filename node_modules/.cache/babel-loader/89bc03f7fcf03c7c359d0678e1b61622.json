{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst App = props => {\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [props]);\n  let routes = /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    component: Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: BurgerBuilder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n\n  if (props.isAuthenticated) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/orders\",\n      component: Orders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: BurgerBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, routes));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/App.js"],"names":["React","useEffect","Route","Switch","withRouter","Redirect","connect","Layout","BurgerBuilder","Checkout","Orders","Auth","Logout","actions","App","props","onTryAutoSignup","routes","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAiD,kBAAjD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAGA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnBd,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAACC,eAAN;AACD,GAFQ,EAEP,CAACD,KAAD,CAFO,CAAT;AAIE,MAAIE,MAAM,gBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEN,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEH,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;;AAQA,MAAGO,KAAK,CAACG,eAAT,EAA0B;AACxBD,IAAAA,MAAM,gBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAER,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEH,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,MADL,CADF,CADF;AASD,CAnCH;;AAsCA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAM;AACJR,IAAAA,eAAe,EAAE,MAAMQ,QAAQ,CAACX,OAAO,CAACY,cAAR,EAAD;AAD3B,GAAN;AAGD,CAJD;;AAMA,eAAerB,UAAU,CAACE,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { useEffect} from 'react';\nimport {Route,Switch, withRouter, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\n\nimport * as actions from './store/actions/index'\n\n\nconst App = props => {\n\n  useEffect(() => {\n    props.onTryAutoSignup();\n  },[props]); \n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth}/>\n        <Route path='/' component={BurgerBuilder}/>\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if(props.isAuthenticated) {\n      routes=(\n        <Switch>\n          <Route path='/checkout' component={Checkout}/>\n          <Route path='/orders' component={Orders}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/auth' component={Auth}/>\n          <Route path='/' component={BurgerBuilder}/>\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n            {routes}\n        </Layout>\n\n\n      </div>\n    );\n  };\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}