{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 4,\n        building: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE,KAHU;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAOA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAC,GADgB;AAEtBC,EAAAA,MAAM,EAAC,GAFe;AAGtBC,EAAAA,IAAI,EAAC,GAHiB;AAItBC,EAAAA,KAAK,EAAC;AAJgB,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,WAAW,CAACgB,cAAjB;AACI,YAAMC,iBAAiB,GAAG;AAAE,SAACH,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACI,cAAzB,IAA2C;AAAtE,OAA1B;AACA,YAAMC,kBAAkB,GAAGlB,YAAY,CAACY,KAAK,CAACV,WAAP,EAAoBc,iBAApB,CAAvC;AACA,YAAMG,YAAY,GAAG;AACjBjB,QAAAA,WAAW,EAAEgB,kBADI;AAEjBf,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACI,cAAR,CAF/B;AAGjBZ,QAAAA,QAAQ,EAAE;AAHO,OAArB;AAKA,aAAOL,YAAY,CAACY,KAAD,EAAQO,YAAR,CAAnB;;AAGJ,SAAKpB,WAAW,CAACqB,iBAAjB;AACI,YAAMC,UAAU,GAAG;AAAE,SAACR,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACI,cAAzB,IAA2C;AAAtE,OAAnB;AACA,YAAMK,WAAW,GAAGtB,YAAY,CAACY,KAAK,CAACV,WAAP,EAAoBmB,UAApB,CAAhC;AACA,YAAME,SAAS,GAAG;AACdrB,QAAAA,WAAW,EAAEoB,WADC;AAEdnB,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACI,cAAR,CAFlC;AAGdZ,QAAAA,QAAQ,EAAE;AAHI,OAAlB;AAKA,aAAOL,YAAY,CAACY,KAAD,EAAQW,SAAR,CAAnB;;AAEJ,SAAKxB,WAAW,CAACyB,eAAjB;AACI,aAAOxB,YAAY,CAACY,KAAD,EAAQ;AACvBV,QAAAA,WAAW,EAAEW,MAAM,CAACX,WADG;AAEvBE,QAAAA,KAAK,EAAE,KAFgB;AAGvBD,QAAAA,UAAU,EAAE,CAHW;AAIvBE,QAAAA,QAAQ,EAAE;AAJa,OAAR,CAAnB;;AAOJ,SAAKN,WAAW,CAAC0B,wBAAjB;AACI,aAAOzB,YAAY,CAACY,KAAD,EAAQ;AAACR,QAAAA,KAAK,EAAE;AAAR,OAAR,CAAnB;;AACJ;AACI,aAAOQ,KAAP;AAjCR;AAmCH,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedState);\n            \n\n        case actionTypes.REMOVE_INGREDIENT:\n            const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\n            const updatedIngs = updateObject(state.ingredients, updatedIng);\n            const updatedSt = {\n                ingredients: updatedIngs,\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedSt);\n\n        case actionTypes.SET_INGREDIENTS:\n            return updateObject(state, {\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 4,\n                building: false\n            });\n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return updateObject(state, {error: true});\n        default: \n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}