{"ast":null,"code":"var _jsxFileName = \"/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nconst BurgerBuilder = props => {\n  const [purchasing, setPurchasing] = useState(false);\n  useEffect(() => {\n    props.onInitIngredients();\n  }, []);\n\n  const updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  };\n\n  const purchaseHandler = () => {\n    if (props.isAuthenticated) {\n      setPurchasing(true);\n    } else {\n      props.onSetAuthRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    props.onInitPurchase();\n    props.history.push('/checkout');\n  };\n\n  const disabledInfo = { ...props.ings\n  };\n\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n\n  ;\n  let orderSummary = null;\n  let burger = props.error ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 36\n    }\n  }, \"Ingredients can't be loaded!\") : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 74\n    }\n  });\n\n  if (props.ings) {\n    burger = /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: props.ings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: props.onIngredientAdded,\n      ingredientRemoved: props.onIngredientRemoved,\n      disabled: disabledInfo,\n      purchasable: updatePurchaseState(props.ings),\n      ordered: purchaseHandler,\n      price: props.price,\n      isAuth: props.isAuthenticated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }));\n    orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: props.ings,\n      purchaseCancelled: purchaseCancelHandler,\n      purchaseContnued: purchaseContinueHandler,\n      price: props.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    show: purchasing,\n    modalClosed: purchaseCancelHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, orderSummary), burger);\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/asutosh/Documents/myReact/burger-builder-with-ReactHooks/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useEffect","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","actions","BurgerBuilder","props","purchasing","setPurchasing","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","isAuthenticated","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","state","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport {connect} from 'react-redux'\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler'\n\nimport * as actions from '../../store/actions/index'\n\n\n\nconst BurgerBuilder = props => {\n\n    const [purchasing, setPurchasing] = useState(false);\n\n    useEffect(() => {\n        props.onInitIngredients();\n    }, [] );\n\n    const updatePurchaseState = ingredients => {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => {\n                        return ingredients[igKey]\n                    })\n                    .reduce((sum, el) => {\n                        return sum + el;\n                    }, 0);\n        return sum>0;\n    }\n    \n    const purchaseHandler = () =>  {\n        if(props.isAuthenticated) {\n            setPurchasing(true);\n        }\n        else {\n            props.onSetAuthRedirectPath('/checkout');\n            props.history.push('/auth')\n        }\n    }\n\n    const purchaseCancelHandler = () => {\n        setPurchasing(false);\n    }\n\n    const purchaseContinueHandler = () => {\n        props.onInitPurchase();\n        props.history.push('/checkout');\n    }\n\n        const disabledInfo = {\n            ...props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        };\n\n        let orderSummary = null;\n\n        let burger = props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if(props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={props.ings}/>\n                        <BuildControls \n                            ingredientAdded={props.onIngredientAdded}\n                            ingredientRemoved={props.onIngredientRemoved}\n                            disabled={disabledInfo}\n                            purchasable={updatePurchaseState(props.ings)}\n                            ordered={purchaseHandler}\n                            price={props.price}\n                            isAuth={props.isAuthenticated}\n                        />\n                </Aux>        \n            );\n\n            orderSummary = (<OrderSummary \n                    ingredients={props.ings} \n                    purchaseCancelled={purchaseCancelHandler}\n                    purchaseContnued={purchaseContinueHandler}\n                    price={props.price}/>\n                );\n        }\n\n        return(\n            <Aux>\n                <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}