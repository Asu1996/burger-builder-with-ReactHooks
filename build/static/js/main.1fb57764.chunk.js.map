{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/images/original.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Order.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","withErrorHandler/withErrorHandler.js","components/Order/Order.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","original","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","modalClosed","Modal","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContnued","instance","axios","create","baseURL","spinner","loader","withErrorHandler","WrappedContent","error","errorConfirmHandler","interceptors","request","use","req","response","res","reqInterceptor","resInterceptor","eject","message","order","ingredientName","push","name","amount","ingredientOutput","ig","display","margin","border","padding","Order","Number","parseFloat","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","goBack","replace","summary","purchaseRedirect","purchased","match","component","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","Date","getTime","expiresIn","setItem","localId","console","log","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","updatedIngredient","updatedIngredients","updatedState","updatedIng","updatedIngs","updatedSt","newOrder","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fb57764.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = (props) => props.children;\n\nexport default aux;\n\n","import React from 'react';\n\nimport original from '../../assets/images/original.png'\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={ {height:props.height} }>\n        <img src={original} alt='Mera Burger'/>\n    </div>\n);\n\nexport default logo;","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport classes from './NavigationItem.module.css'\n\n\nconst navigationItem = (props) => (\n        <li className={classes.NavigationItem}>\n            <NavLink \n                to={props.link}\n                exact={props.exact}\n                activeClassName={classes.active}         \n                >{props.children}</NavLink>\n        </li>\n);\n\nexport default navigationItem;","import React from 'react'\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\n        {props.isAuthenticated\n            ? <NavigationItem link='/orders'>My Orders</NavigationItem>\n            : null}\n        {!props.isAuthenticated\n        ? <NavigationItem link='/auth'>AUthenticate</NavigationItem>\n        : <NavigationItem link='/logout'>LogOut</NavigationItem>\n        }\n    </ul>\n);\n\nexport default navigationItems","import React from 'react';\n\nimport classes from './DrawerToggle.module.css'\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react'\n\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\nconst toolbar =(props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <Logo height='80%'/>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n                <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                    <Logo height='11%'/>\n                    <nav>\n                        <NavigationItems isAuthenticated={props.isAuth}/>\n                    </nav>\n                </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React,{Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport {connect} from 'react-redux'\n\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n    \n    sideDrawerClosedHandler =() => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler =() => {\n        this.setState( (prevState) => {\n            return {showSideDrawer: !this.state.showSideDrawer}; } );\n    };\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    };\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport classes from './BurgerIngredient.module.css'\n\nclass BurgerIngredient extends Component{\n    render() {\n        let ingredient = null;\n\n        switch(this.props.type) {\n            case ('bread-bottom'):ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n            case ('bread-top'):\n                ingredient = <div className={classes.BreadTop}>\n                                <div className={classes.Seeds1}></div>\n                                <div className={classes.Seeds2}></div>\n                            </div>;\n            break;\n            case('meat'):ingredient =  <div className={classes.Meat}></div>;\n            break;\n            case('cheese'):ingredient =  <div className={classes.Cheese}></div>;\n            break;\n            case('bacon'):ingredient =  <div className={classes.Bacon}></div>;\n            break;\n            case('salad'):ingredient =  <div className={classes.Salad}></div>;\n            break;\n            default: ingredient = null;\n        };\n    return ingredient;\n    };\n    \n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react'\n\nimport classes from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst burger = (props) => {\n    \n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            })\n        }).reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    \n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react'\n\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls =(props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                    key={ctrl.label} \n                    label={ctrl.label}\n                    added={() => props.ingredientAdded(ctrl.type)}\n                    removed={() => props.ingredientRemoved(ctrl.type)} \n                    disabled={props.disabled[ctrl.type]}/>\n        ))}\n        <button className={classes.OrderButton}\n        disabled={!props.purchasable}\n        onClick={props.ordered}>{props.isAuth ? 'ORDER NOW!!!' : 'sign up to order'}</button>\n    </div>\n);\n\nexport default buildControls;","import React from 'react'\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux'\nimport Backdrop from '../Backdrop/Backdrop'\n\nconst modal = (props) => (\n    <Aux>    \n        <Backdrop show={props.show} clicked={props.modalClosed}/>\n            <div className={classes.Modal}\n                style={{\n                    transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                {props.children}\n            </div>\n    </Aux>\n);\n\nexport default modal;","import React from 'react'\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')} \n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';\n\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button'\n\nconst orderSummary = (props)  => {\n\n    const ingredientSummary = Object.keys(props.ingredients)\n    .map(igKey => {\n        return <li key={igKey}>\n            <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n    })\n\n    return(\n        <Aux>\n            <h3>Your Order-></h3>\n            <p>Ye sab hain isme -- >></p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Total Price = {props.price.toFixed(2)}</p>\n            <p>Continue to checkout???</p>\n            <Button btnType='Danger' clicked={props.purchaseCancelled}>Cancel</Button>\n            <Button btnType='Success' clicked={props.purchaseContnued}>Contine!!</Button>\n\n        </Aux>\n    )\n};\n\nexport default orderSummary","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-55460.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\n\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.loader}>Loading...</div>\n);\n\nexport default spinner;","import React, {Component} from 'react'\n\nimport Modal from '../components/UI/Modal/Modal'\nimport Aux from '../hoc/Aux'\n\n\nconst withErrorHandler = (WrappedContent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        };\n\n        componentDidMount () {\n\n            axios.interceptors.request.use( req=> {\n                this.setState({error: null});\n                return req;\n            })\n\n            axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req=> {\n                this.setState({error: null});\n                return req;\n            })\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({error:null});\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedContent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n};\n\nexport default withErrorHandler;","import React from 'react'\n\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount:props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }} \n            key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import axios from 'axios'\n\nimport * as actionTypes from './actionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime*1000)\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBxiKI5tTysmtMpXnQq8kU_0jvj2c79mZY'\n        if(!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBxiKI5tTysmtMpXnQq8kU_0jvj2c79mZY'\n        }\n        axios.post(url, authData)\n        .then(response => {\n            const expirationTime =new Date(new Date().getTime() + response.data.expiresIn*1000)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('expirationTime', expirationTime)\n            localStorage.setItem('userId', response.data.localId)\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\n            dispatch(checkAuthTimeout(response.data.expiresIn))\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(authFail(err.response.data.error));\n        });\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState =() => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token) {\n            dispatch(logout());\n        } else {\n            const expirationTime = new Date(localStorage.getItem('expirationTime'))\n            if(expirationTime <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationTime.getTime()- new Date().getTime())/1000))\n            }\n        }\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\n\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React,{Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler'\n\nimport * as actions from '../../store/actions/index'\n\n\n\nclass BurgerBuilder extends Component{\n    \n    state = {\n        purchasing:false,\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => {\n                        return ingredients[igKey]\n                    })\n                    .reduce((sum, el) => {\n                        return sum + el;\n                    }, 0);\n        return sum>0;\n    }\n    \n    purchaseHandler = () =>  {\n        if(this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        }\n        else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth')\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing:false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        };\n\n        let orderSummary = null;\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if(this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings}/>\n                        <BuildControls \n                            ingredientAdded={this.props.onIngredientAdded}\n                            ingredientRemoved={this.props.onIngredientRemoved}\n                            disabled={disabledInfo}\n                            purchasable={this.updatePurchaseState(this.props.ings)}\n                            ordered={this.purchaseHandler}\n                            price={this.props.price}\n                            isAuth={this.props.isAuthenticated}\n                        />\n                </Aux>        \n            );\n\n            orderSummary = (<OrderSummary \n                    ingredients={this.props.ings} \n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContnued={this.purchaseContinueHandler}\n                    price={this.props.price}/>\n                );\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients =(ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-my-burger-55460.firebaseio.com/ingredients.json')\n        .then(response => {\n            dispatch(setIngredients(response.data));\n        })\n        .catch( error => {\n            dispatch(fetchIngredientsFailed());\n        });\n}\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\nimport order from '../../components/Order/Order';\n\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart =() => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n         \n        axios.post( '/orders.json?auth='+token, orderData )\n            .then( response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n                } \n            )\n            .catch( error => {\n                dispatch(purchaseBurgerFail(error));\n                } \n            )\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return{\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return{\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return{\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n        .then(res => {\n            const fetchedOrders = [];\n            for(let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id : key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders));\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err));\n        });\n    }\n}","import React from 'react'\n\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\n\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>badhiya hai!!</h1>\n            <div style={{width:'100%', margin:'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType='Danger'\n                clicked={props.checkoutCancelled}>CANCEL\n            </Button>\n            <Button \n                btnType='Success'\n                clicked={props.checkoutContinued}>CONTINUE!\n            </Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react'\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType) {\n        case ('input'): inputElement = \n                            <input \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}/>;\n        break;\n        case ('textarea') : inputElement = \n                                <textarea \n                                    className={inputClasses.join(' ')} \n                                    {...props.elementConfig} \n                                    value={props.value}\n                                    onChange={props.changed}/>;\n        break;\n        case('select') : inputElement = (\n                            <select\n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}>\n                                {props.elementConfig.options.map(option => (\n                                    <option key={option.value} value={option.value}>\n                                        {option.displayValue}\n                                    </option>\n                                ))}     \n                            </select>);\n        break;\n        default: inputElement = \n                    <input \n                        className={inputClasses.join(' ')} \n                        {...props.elementConfig} \n                        value={props.value}\n                        onChange={props.changed}/>\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n}\n\nexport default input;","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","import React, {Component} from 'react'\nimport axios from '../../../axios-orders'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../components/UI/Button/Button'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../withErrorHandler/withErrorHandler'\nimport {updateObject,checkValidity} from '../../../shared/utility'\n\nimport * as actions from '../../../store/actions/index'\n\nimport classes from './ContactData.module.css'\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourName?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourStreet?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourZipCode?'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'YourCountry?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'YourEmail?'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod : {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                valid:true,\n                validation: {},\n\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        } ;\n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value:event.target.value,\n            valid:checkValidity(event.target.value, this.state.orderForm.validation),\n            touched:true\n\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        })\n            \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React,{Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\n\nimport * as actions from '../../store/actions/index'\n\nclass Checkout extends Component {\n\n    checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n\n        let summary = <Redirect to='/' />\n        if(this.props.ings) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary =(\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelled}\n                        checkoutContinued={this.checkoutContinued} />\n                        <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData}/>\n                </div>\n            );\n        }\n\n        return summary;\n        \n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\n\nexport default connect(mapStateToProps)(Checkout);","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport axios from '../../axios-orders'\n\nimport Order from '../../components/Order/Order'\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nimport * as actions from '../../store/actions/index'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token,this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients = {order.ingredients}\n                    price={order.price}\n                />\n            ))\n        }\n    \n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nimport Input from '../../components/UI/Input/Input'\nimport Button from '../../components/UI/Button/Button'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport {updateObject, checkValidity} from '../../shared/utility'\n\n\nimport classes from './Auth.module.css'\n\nclass Auth extends Component {\n    \n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'YourMail??'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'PASS??'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        isSignup: true\n    };\n\n    componentDidMount() {\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n           this.props.onSetAuthRedirectPath(); \n        }\n\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            })\n        })\n        this.setState({controls: updatedControls});\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value, this.state.isSignup)\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignup: !prevState.isSignup};\n        })\n    }\n\n    \n    \n    render() {\n\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} \n            />\n        ));\n\n        if(this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if(this.props.error) {\n            errorMessage = (\n            <p>{this.props.error.message}</p>\n            )\n        }\n\n        let authRedirect=null;\n        if(this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button \n                        btnType=\"Success\" >SUBMIT\n                    </Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\" >switch to {this.state.isSignup ? 'sign in!' : 'sign up!!' }\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password,isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React, { Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport * as actions from '../../../store/actions/index'\n\nclass Logout extends Component{\n    \n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to='/'/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component} from 'react';\nimport {Route,Switch, withRouter, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\n\nimport * as actions from './store/actions/index'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth}/>\n        <Route path='/' component={BurgerBuilder}/>\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated) {\n      routes=(\n        <Switch>\n          <Route path='/checkout' component={Checkout}/>\n          <Route path='/orders' component={Orders}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/auth' component={Auth}/>\n          <Route path='/' component={BurgerBuilder}/>\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n            {routes}\n        </Layout>\n\n\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedState);\n            \n\n        case actionTypes.REMOVE_INGREDIENT:\n            const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\n            const updatedIngs = updateObject(state.ingredients, updatedIng);\n            const updatedSt = {\n                ingredients: updatedIngs,\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedSt);\n\n        case actionTypes.SET_INGREDIENTS:\n            return updateObject(state, {\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 4,\n                building: false\n            });\n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return updateObject(state, {error: true});\n        default: \n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state= initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, {purchased: false});\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, {loading: true});;\n        case actionTypes.PURCHASE_BURGER_SUCCESS: \n            const newOrder =updateObject(...action.orderData, {id: action.orderId});\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            });\n            \n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, {loading: false});\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, { orders: action.orders,\n                loading: false });   \n\n        case actionTypes.FETCH_ORDERS_START:\n                return updateObject(state, {loading: true});\n\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, {loading: false});\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../../shared/utility'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\n const reducer = (state=initialState, action) => {\n     switch (action.type) {\n\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return updateObject(state, {authRedirectPath: action.path});\n\n        case actionTypes.AUTH_LOGOUT:\n            return updateObject(state, {\n                token: null,\n                userId: null\n            })\n\n        case actionTypes.AUTH_START:\n            return updateObject(state, {error: null, loading: true});\n\n        case actionTypes.AUTH_FAIL:\n            return updateObject(state, {\n                error: action.error,\n                loading: false\n            })\n\n        case actionTypes.AUTH_SUCCESS:\n            return updateObject(state, {\n                token: action.idToken,\n                userId: action.userId,\n                error: null,\n                loading: false\n            });\n        \n         default: return state;\n     }\n }\n\n export default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}